apply plugin: 'com.android.application'



def getNdkBuildPath() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    def command =  properties.getProperty('ndk.dir')
    return command
}


android {
    compileSdkVersion 23
    buildToolsVersion "22.0.1"
//    compileSdkVersion 21
//    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.namh.ndkhelloworld"
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"

        ndk{
            moduleName "hello-jni"
        }
    }

    sourceSets.main{
        jni.srcDirs = []

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    // For Ndk-build
    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkLibsToJar
    }

    task ndkLibsToJar(type: Zip, dependsOn: 'ndkBuild', description: 'Create a JAR of the native libs') {
        destinationDir new File(buildDir, 'libs')
        baseName 'ndk-libs'
        extension 'jar'
        from(new File(buildDir, 'libs')) { include '**/*.so' }
        into 'lib/'
    }

    task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
        def ndkDir = getNdkBuildPath()
        println(ndkDir)
        commandLine "$ndkDir/ndk-build.cmd",
                'NDK_PROJECT_PATH=build',
                'APP_BUILD_SCRIPT=src/main/jni/Android.mk',
                'NDK_APPLICATION_MK=src/main/jni/Application.mk'
    }


}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile fileTree(dir: "$buildDir/libs", include: ['*.jar'])

    compile 'com.android.support:appcompat-v7:23.1.0'
}
